#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#
import os
import json
import sys
# agent is a NethServer library which provides function to communicate with the agent
import agent
import secrets

data = json.load(sys.stdin)
#This is specific to you module, so you need to change it accordingly.

def generate_random_password(length):
    # Generate random bytes and convert them to a hexadecimal string
    random_bytes = os.urandom(length)
    password = random_bytes.hex()
    return password[:length]

# DB Config
POSTGRES_DB = data.get("POSTGRES_DB","linkwarden")
POSTGRES_USER = data.get("POSTGRES_USER","linkwarden")
POSTGRES_PASSWORD = generate_random_password(16)

db_config = {
    "POSTGRES_DATABASE": POSTGRES_DB,
    "POSTGRES_USER": POSTGRES_USER,
    "POSTGRES_PASSWORD": POSTGRES_PASSWORD,
}
agent.write_envfile('database.env', db_config)

random_key = secrets.token_hex(16)
POSTGRES_URL = f"postgresql://{POSTGRES_USER}:{POSTGRES_PASSWORD}@postgresql-app/{POSTGRES_DB}"
app_config = {
    "NEXTAUTH_SECRET": random_key,
    "DATABASE_URL": POSTGRES_URL,
    "POSTGRES_PASSWORD": POSTGRES_PASSWORD,
}
agent.write_envfile('app-config.env', app_config)

# # just before starting systemd unit
agent.dump_env()